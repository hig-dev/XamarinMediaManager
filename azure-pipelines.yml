# Xamarin.Android
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

steps:
- task: NuGetToolInstaller@1

- task: CmdLine@2
  inputs:
    script: |
      dir
      cd d:\a\1\s
      dir
- task: NuGetCommand@2
  inputs:
    restoreSolution: 'ExoPlayer_slim.sln'

- task: MSBuild@1
  inputs:
    solution: 'ExoPlayer_slim.sln'
    configuration: 'Release'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'ExoPlayer.Core/ExoPlayer.Core.csproj'
    configuration: 'Release'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '2'
    minorVersion: '11'
    patchVersion: '1'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'ExoPlayer/ExoPlayer.csproj'
    configuration: 'Release'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '2'
    minorVersion: '11'
    patchVersion: '1'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'ExoPlayer.Ext.Flac/ExoPlayer.Ext.Flac.csproj'
    configuration: 'Release'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '2'
    minorVersion: '11'
    patchVersion: '1'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '12aaaeb3-d960-40ef-b73c-29d3817cf2a9'
